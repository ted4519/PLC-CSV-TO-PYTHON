PLC 데이터 모니터링 및 시각화 시스템
1. 프로젝트 개요
이 프로젝트는 PLC(Programmable Logic Controller)에서 생성되는 실시간 데이터를 처리하고 시각화하기 위한 시스템입니다. Python과 관련 라이브러리를 활용하여 온도 데이터를 CSV 파일로 저장하고, 이를 실시간으로 시각화할 수 있도록 설계되었습니다. 또한, 데이터 선택 및 저장 기능을 제공하여 사용자가 특정 시간대의 데이터를 효율적으로 분석할 수 있습니다.

2. 주요 기능
실시간 데이터 생성 및 저장:

임의의 온도 데이터를 생성하여 실시간으로 CSV 파일에 저장합니다.
데이터를 시간 단위로 정렬하여 관리합니다.
실시간 그래프 시각화:

Matplotlib 및 Seaborn을 사용하여 데이터를 실시간으로 시각화합니다.
X축 간격 및 시간 범위를 동적으로 조정할 수 있습니다.
데이터 선택 및 저장:

특정 시간대의 데이터를 선택하여 저장 가능.
사용자 인터페이스를 통해 필요한 데이터를 탐색하고 선택할 수 있습니다.
사용자 인터페이스 통합:

Tkinter 기반의 GUI를 통해 색상 선택, 시간 범위 설정, 데이터 저장 등의 기능 제공.
버튼을 통한 그래프 업데이트 및 데이터 관리 기능.
3. 기술적 세부사항
Python 라이브러리:
pandas: CSV 데이터 처리.
matplotlib 및 seaborn: 데이터 시각화.
tkinter: 사용자 인터페이스 구현.
numpy: 임의 데이터 생성.
주요 알고리즘:
실시간 데이터 처리: 온도 데이터를 1초 단위로 생성하고, 실시간 업데이트를 통해 그래프에 반영.
파일 관리: CSV 파일에 데이터를 저장하며, 선택한 시간대 데이터를 별도로 저장.
멀티스레딩:
데이터를 저장하는 작업과 그래프 업데이트를 별도의 스레드로 처리하여 효율적인 실행.
4. 프로젝트 구현 과정
데이터 생성:
임의 데이터를 생성하여 CSV 파일에 저장.
여러 온도 센서 데이터를 시뮬레이션.
실시간 시각화:
Matplotlib의 애니메이션 기능을 활용하여 실시간 그래프를 구현.
Seaborn을 적용하여 스타일을 개선.
사용자 입력 처리:
Tkinter를 활용한 사용자 인터페이스로 데이터 선택 및 필터링 기능 제공.
파일 저장 기능:
특정 시간대 데이터를 저장할 수 있는 옵션 추가.
5. 학습한 점
Python 기반 데이터 처리:
Pandas를 활용한 대규모 CSV 데이터 처리 및 분석.
데이터 시각화 기술:
실시간 그래프 구현 및 Matplotlib/Seaborn의 활용.
멀티스레딩:
데이터 저장과 시각화를 독립적으로 처리하여 프로그램 성능 최적화.
사용자 인터페이스 설계:
Tkinter를 활용하여 사용자 친화적인 인터페이스를 구현.
6. 프로젝트 의의
이 프로젝트는 데이터 수집 및 분석 과정을 자동화하고 실시간으로 시각화함으로써 데이터 기반 의사 결정을 지원하는 데 큰 의미를 가집니다. 또한, Python을 사용한 실시간 데이터 처리 및 시각화 기술을 학습하고, 사용자 인터페이스를 통합하여 최종 사용자 친화적인 솔루션을 제공할 수 있었습니다.
